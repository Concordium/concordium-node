[package]
name = "p2p_client"
version = "0.4.2" # must be kept in sync with 'is_compatible_version' in 'src/configuration.rs'
description = "Concordium P2P Client"
authors = ["Concordium AG <contact@concordium.com>"]
exclude = [".gitignore", ".gitlab-ci.yml", "test/**/*","**/**/.gitignore","**/**/.gitlab-ci.yml"]
publish = false
build = "build.rs"
autobins = false
edition = "2018"
default-run = "p2p_client-cli"
license = "MIT"

[features]
default = []
s11n_capnp = ["capnp", "capnpc"]
s11n_serde = ["concordium-common/s11n_serde", "serde", "serde_derive"]
s11n_serde_cbor = ["s11n_serde", "serde_cbor"]
s11n_serde_msgpack = ["s11n_serde", "rmp-serde"]
instrumentation = ["serde", "serde_derive", "gotham", "mime", "gotham_derive", "prometheus", "hyper", "num_cpus", "reqwest", "http" ]
network_dump = []
static = [ "consensus-rust/static" ]
profiling = [ "consensus-rust/profiling", "static" ]
collector = [ "reqwest/default-tls", "serde_json", "serde/derive", "rmp-serde", "gotham", "mime", "gotham_derive", "hyper", "futures" ]
staging_net = [ "serde_json", "serde/derive", "reqwest/default-tls", "jsonwebtoken" ]
database_emitter = []
genesis_tester = [ "tempfile" ]

[profile.release]
codegen-units = 1

[dependencies]
# Internal dependencies
consensus-rust = { path = "deps/internal/consensus/consensus-rust"  }
concordium-dns = { package = "concordium-dns", path = "deps/internal/concordium-dns" }
concordium-common = { path = "deps/internal/consensus/globalstate-mockup/deps/concordium-common"  }
crypto_common = { path = "deps/internal/consensus/crypto/rust-src/crypto_common" }

# External dependencies
parking_lot = "0.11"
structopt = "0.3"
rand = "0.7"
ed25519-dalek = "=1.0.0"
mio = { version = "0.7", features = ["os-poll", "tcp"] }
log = "0.4"
env_logger = "0.7"
byteorder = "1.3"
preferences = "1.1"
app_dirs2 = "2.3"
chrono = "0.4"
failure = "0.1.7"
cfg-if = "0.1"
base64 = "0.12"
rkv = "0.15"
circular-queue = "0.2"
digest = "0.9"
twox-hash = { version = "^1.5.0", features = ["digest"] }
nohash-hasher = "0.2"
rayon = "1.4"
noiseexplorer_xx = { path = "deps/external/noiseexplorer_xx" }
bytesize = "1.0"
crossbeam-channel = "0.4"
semver = { version = "0.10", features = ["serde"] }
ctrlc = "3.1"
signal-hook = "0.1"
flatbuffers = { version = "^0.6" }
flatc-rust = { version = "^0.1" }
sha2 = "0.9"

# gRPC dependencies
tonic = "0.3"
prost = "0.6"
tokio = { version = "0.2", features = ["macros", "rt-threaded"] }

# Feature-gated dependencies
gotham = { version = "0.5", optional = true } #{ git = "https://github.com/gotham-rs/gotham", rev = "aa64e50442defb4c92bc45ceee6a0ed33e8aef4c", optional = true } #0.5??
gotham_derive = { version = "0.5", optional = true }
http = { version = "0.2", optional = true }
hyper = { version = "0.13", optional = true }
reqwest = { version = "0.10", default-features = false, optional = true, features = ["default-tls", "stream", "json"] }
mime = { version = "0.3", optional = true }
futures = { version = "0.3", optional = true }
serde = { version = "1.0", features = ["rc"], optional = true }
serde_derive = { version = "1.0", optional = true }
capnp = { version = "0.13", optional = true }
serde_cbor = { version = "0.11", optional = true }
rmp-serde = { version = "0.14.0", optional = true }
serde_json = { version = "1", optional = true }
num_cpus = { version = "1.13", optional = true }
jsonwebtoken = { version = "7", optional = true }
prometheus = { version = "0.10", default-features = false, features = ["gen", "push", "protobuf"], optional = true }
tempfile = { version = "3.1", optional = true }

[target.'cfg(windows)'.dependencies]
ipconfig = { version = "0.2" }
libc = "0.2"

[target.'cfg(unix)'.dependencies]
get_if_addrs = { version = "0.5" }
uuid = { version = "0.8", default-features = false, optional = true }
libc = "0.2"

[build-dependencies]
tonic-build = { version = "0.3", default-features = false, features = ["transport", "prost"] }
capnpc = { version = "0.13", optional = true }
flatc-rust = "^0.1"

[dev-dependencies]
criterion = "0.3"
quickcheck = "^0.9"
futures = "0.3"
itertools = "0.9"

[lib]
path = "src/lib.rs"
name = "p2p_client"

[[bin]]
path = "src/bin/cli.rs"
name = "p2p_client-cli"

[[bin]]
path = "src/bin/bootstrapper.rs"
name = "p2p_bootstrapper-cli"

[[bin]]
path = "src/bin/dnsrecordgen.rs"
name = "dns_record_generator"

[[bin]]
path = "src/bin/genkey.rs"
name = "dns_key_generator"

[[bin]]
name = "node-collector"
path = "src/bin/collector.rs"
required-features = [ "collector" ]

[[bin]]
name = "node-collector-backend"
path = "src/bin/collector_backend.rs"
required-features = [ "collector" ]

[[bin]]
name = "network_stress_test"
path = "src/bin/network_stress_test.rs"

[[bin]]
name = "bootstrap_checker"
path = "src/bin/bootstrap_checker.rs"

[[bin]]
name = "database_emitter"
path = "src/bin/database_emitter.rs"
required-features = [ "database_emitter" ]

[[bin]]
name = "genesis_tester"
path = "src/bin/genesis_tester.rs"
required-features = [ "genesis_tester" ]

[[bench]]
name = "p2p_lib_benchmark"
harness = false
