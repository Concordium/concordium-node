module ChainMetaTest where

import Prod
import Maybe
import Prim
import Blockchain
import Unit
import Helpers

data Model = Model [Word64, Word64, Word64]

contract Simple where

  init (ia :: Unit.Unit) (c :: Blockchain.InitContext) (amount :: Amount) =
    let cc :: Blockchain.ChainContext = (Blockchain.initChain c) in
    let sn :: Word64 = Blockchain.slotNumber cc in
    let bh :: Word64 = Blockchain.blockHeight cc in
    let fh :: Word64 = Blockchain.finalizedHeight cc in
    Model sn bh fh

  receive (c :: Blockchain.ReceiveContext) (model :: Model) (caller :: Blockchain.Caller) (amount :: Amount) (msg :: Maybe.Maybe Unit.Unit) =
    let accept' :: Model -> Maybe.Maybe (Prod.Pair Model Prim.Transaction) = Helpers.accept [Model] in
    accept' model

