[Unit]
Description=Concordium Node
After=syslog.target network.target

[Service]
Type=simple
ExecStart=/usr/bin/concordium-node-${build_version} --config-dir ${STATE_DIRECTORY}/config --data-dir ${STATE_DIRECTORY}/data
Restart=always
RestartSec=20

# sandboxing
# do not allow the process to access /home, /root, and /run/user
ProtectHome=yes
# mount /usr, /boot, /efi, and /etc as read-only. Implied by dynamic-user as well.
ProtectSystem=strict
NoNewPrivileges=yes
ProtectClock=yes
PrivateDevices=yes
PrivateTmp=yes
ProtectHostname=yes
PrivateUsers=yes
ProtectControlGroups=yes
ProtectKernelLogs=yes
ProtectKernelModules=yes
ProtectKernelTunables=yes
CapabilityBoundingSet=
LockPersonality=yes
RestrictRealtime=yes
# The current node version generates some code at runtime to bridge the FFI
# between Haskell and rust related to smart contracts. Hence we have to allow
# mappings that are writable and then turned into executable.
MemoryDenyWriteExecute=no
DynamicUser=yes
# state directory is relative to /var/lib/, see systemd man pages Sandboxing section.
# This sets the STATE_DIRECTORY environment variable that is used as part of the ExecStart command.
StateDirectory=concordium-${build_genesis_hash}
# relative to the state directory root %S
WorkingDirectory=%S/concordium-${build_genesis_hash}

# port on which the node will listen for incoming connections
Environment=CONCORDIUM_NODE_LISTEN_PORT=${build_listen_port}
# where to bootstrap from
Environment=CONCORDIUM_NODE_CONNECTION_BOOTSTRAP_NODES=${build_bootstrap}
# desired number of nodes to be connected to.
Environment=CONCORDIUM_NODE_CONNECTION_DESIRED_NODES=5
# maximum number of __nodes__ the node will be connected to.
Environment=CONCORDIUM_NODE_CONNECTION_MAX_ALLOWED_NODES=10
# Address of the GRPC V2 server.
Environment=CONCORDIUM_NODE_GRPC2_LISTEN_ADDRESS=0.0.0.0
# And its port of the GRPC V2 server.
Environment=CONCORDIUM_NODE_GRPC2_LISTEN_PORT=${build_grpc2_listen_port}
# The url of the catchup file. This speeds up the catchup process.
Environment=CONCORDIUM_NODE_CONSENSUS_DOWNLOAD_BLOCKS_FROM=${build_catchup_url}

# maximum number of __connections__ the node can have. This can temporarily be more than
# the number of peers when incoming connections are processed. 
Environment=CONCORDIUM_NODE_CONNECTION_HARD_CONNECTION_LIMIT=20
# number of threads to use to process network events.
Environment=CONCORDIUM_NODE_CONNECTION_THREAD_POOL_SIZE=2
# Extra arguments that generally should not be altered.
# Do not output timestamp in log output.
Environment=CONCORDIUM_NODE_NO_LOG_TIMESTAMP=true
# The bootstrapping interval in seconds.
Environment=CONCORDIUM_NODE_CONNECTION_BOOTSTRAPPING_INTERVAL=1800
# Haskell RTS flags to pass to consensus.
Environment=CONCORDIUM_NODE_RUNTIME_HASKELL_RTS_FLAGS=-N2,-I0
    
[Install]
# start the service when reaching multi-user target
WantedBy=multi-user.target
